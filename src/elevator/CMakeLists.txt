set (elevator_LIB_INCLUDE_DIRS
  ${PROJECT_SOURCE_DIR}/jaulib/include
  ${AMALGAMATION_ARCH_INC}
  ${PROJECT_SOURCE_DIR}/include
)

include_directories(
  ${elevator_LIB_INCLUDE_DIRS}
  ${CMAKE_CURRENT_BINARY_DIR}
)

set (elevator_LIB_SRCS
  ${PROJECT_SOURCE_DIR}/jaulib/src/debug.cpp
  ${PROJECT_SOURCE_DIR}/jaulib/src/basic_types.cpp
  ${PROJECT_SOURCE_DIR}/jaulib/src/environment.cpp
  ${AMALGAMATION_ARCH_INC}/botan_all.cpp
  ${PROJECT_SOURCE_DIR}/src/elevator/process.cpp
  ${PROJECT_SOURCE_DIR}/src/elevator/IOUtil.cpp
  ${PROJECT_SOURCE_DIR}/src/elevator/Crypto.cpp
#  ${PROJECT_SOURCE_DIR}/src/elevator/Crypto0.cpp
  ${PROJECT_SOURCE_DIR}/src/elevator/Crypto1.cpp
#  ${PROJECT_SOURCE_DIR}/src/elevator/Crypto2.cpp
# autogenerated files
  ${CMAKE_CURRENT_BINARY_DIR}/../version.cpp
)

add_library (elevator SHARED ${elevator_LIB_SRCS})
target_link_libraries (
  elevator
  unwind
  ${CMAKE_THREAD_LIBS_INIT}
)

if(CMAKE_COMPILER_IS_GNUCC)
# botan fails on cast align etc
target_compile_options(elevator PUBLIC "-Wno-cast-align" "-Wno-unused-parameter")
endif(CMAKE_COMPILER_IS_GNUCC)

if(USE_STRIP)
add_custom_command(TARGET elevator POST_BUILD
                   COMMAND ${STRIP} ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}elevator${CMAKE_SHARED_LIBRARY_SUFFIX}.${elevator_VERSION_STRING}
                   COMMENT "stripping elevator"
                   VERBATIM
                   )
endif(USE_STRIP)

set_target_properties(
   elevator
   PROPERTIES
   SOVERSION ${elevator_VERSION_MAJOR}
   VERSION ${elevator_VERSION_STRING}
)
install (DIRECTORY ${PROJECT_SOURCE_DIR}/include/elevator/ DESTINATION include/elevator)

macro (elevator_CREATE_INSTALL_PKGCONFIG generated_file install_location)
  configure_file (${generated_file}.cmake ${CMAKE_CURRENT_BINARY_DIR}/${generated_file} @ONLY)
  install (FILES ${CMAKE_CURRENT_BINARY_DIR}/${generated_file} DESTINATION ${install_location})
endmacro (elevator_CREATE_INSTALL_PKGCONFIG)
elevator_create_install_pkgconfig (elevator.pc lib${LIB_SUFFIX}/pkgconfig)

install(TARGETS elevator LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})

